// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: serialization/ciphertexts.proto
// Protobuf C++ Version: 5.27.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_serialization_2fciphertexts_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_serialization_2fciphertexts_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "generic.pb.h"
#include "pt_shape.pb.h"
#include "global_params_and_state.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_serialization_2fciphertexts_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_serialization_2fciphertexts_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_serialization_2fciphertexts_2eproto;
namespace lattica_proto {
class CKKS_Ciphertext;
struct CKKS_CiphertextDefaultTypeInternal;
extern CKKS_CiphertextDefaultTypeInternal _CKKS_Ciphertext_default_instance_;
class CKKS_Pt_Scale;
struct CKKS_Pt_ScaleDefaultTypeInternal;
extern CKKS_Pt_ScaleDefaultTypeInternal _CKKS_Pt_Scale_default_instance_;
class Ciphertext;
struct CiphertextDefaultTypeInternal;
extern CiphertextDefaultTypeInternal _Ciphertext_default_instance_;
class RBGV_Ciphertext;
struct RBGV_CiphertextDefaultTypeInternal;
extern RBGV_CiphertextDefaultTypeInternal _RBGV_Ciphertext_default_instance_;
}  // namespace lattica_proto
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace lattica_proto {

// ===================================================================


// -------------------------------------------------------------------

class CKKS_Pt_Scale final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lattica_proto.CKKS_Pt_Scale) */ {
 public:
  inline CKKS_Pt_Scale() : CKKS_Pt_Scale(nullptr) {}
  ~CKKS_Pt_Scale() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CKKS_Pt_Scale(
      ::google::protobuf::internal::ConstantInitialized);

  inline CKKS_Pt_Scale(const CKKS_Pt_Scale& from) : CKKS_Pt_Scale(nullptr, from) {}
  inline CKKS_Pt_Scale(CKKS_Pt_Scale&& from) noexcept
      : CKKS_Pt_Scale(nullptr, std::move(from)) {}
  inline CKKS_Pt_Scale& operator=(const CKKS_Pt_Scale& from) {
    CopyFrom(from);
    return *this;
  }
  inline CKKS_Pt_Scale& operator=(CKKS_Pt_Scale&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CKKS_Pt_Scale& default_instance() {
    return *internal_default_instance();
  }
  static inline const CKKS_Pt_Scale* internal_default_instance() {
    return reinterpret_cast<const CKKS_Pt_Scale*>(
        &_CKKS_Pt_Scale_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CKKS_Pt_Scale& a, CKKS_Pt_Scale& b) { a.Swap(&b); }
  inline void Swap(CKKS_Pt_Scale* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CKKS_Pt_Scale* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CKKS_Pt_Scale* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CKKS_Pt_Scale>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CKKS_Pt_Scale& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CKKS_Pt_Scale& from) { CKKS_Pt_Scale::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CKKS_Pt_Scale* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lattica_proto.CKKS_Pt_Scale"; }

 protected:
  explicit CKKS_Pt_Scale(::google::protobuf::Arena* arena);
  CKKS_Pt_Scale(::google::protobuf::Arena* arena, const CKKS_Pt_Scale& from);
  CKKS_Pt_Scale(::google::protobuf::Arena* arena, CKKS_Pt_Scale&& from) noexcept
      : CKKS_Pt_Scale(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPtScaleFieldNumber = 1,
  };
  // repeated double pt_scale = 1;
  int pt_scale_size() const;
  private:
  int _internal_pt_scale_size() const;

  public:
  void clear_pt_scale() ;
  double pt_scale(int index) const;
  void set_pt_scale(int index, double value);
  void add_pt_scale(double value);
  const ::google::protobuf::RepeatedField<double>& pt_scale() const;
  ::google::protobuf::RepeatedField<double>* mutable_pt_scale();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_pt_scale() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_pt_scale();

  public:
  // @@protoc_insertion_point(class_scope:lattica_proto.CKKS_Pt_Scale)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CKKS_Pt_Scale_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CKKS_Pt_Scale& from_msg);
    ::google::protobuf::RepeatedField<double> pt_scale_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_serialization_2fciphertexts_2eproto;
};
// -------------------------------------------------------------------

class Ciphertext final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lattica_proto.Ciphertext) */ {
 public:
  inline Ciphertext() : Ciphertext(nullptr) {}
  ~Ciphertext() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Ciphertext(
      ::google::protobuf::internal::ConstantInitialized);

  inline Ciphertext(const Ciphertext& from) : Ciphertext(nullptr, from) {}
  inline Ciphertext(Ciphertext&& from) noexcept
      : Ciphertext(nullptr, std::move(from)) {}
  inline Ciphertext& operator=(const Ciphertext& from) {
    CopyFrom(from);
    return *this;
  }
  inline Ciphertext& operator=(Ciphertext&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Ciphertext& default_instance() {
    return *internal_default_instance();
  }
  static inline const Ciphertext* internal_default_instance() {
    return reinterpret_cast<const Ciphertext*>(
        &_Ciphertext_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Ciphertext& a, Ciphertext& b) { a.Swap(&b); }
  inline void Swap(Ciphertext* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Ciphertext* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Ciphertext* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Ciphertext>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Ciphertext& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Ciphertext& from) { Ciphertext::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Ciphertext* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lattica_proto.Ciphertext"; }

 protected:
  explicit Ciphertext(::google::protobuf::Arena* arena);
  Ciphertext(::google::protobuf::Arena* arena, const Ciphertext& from);
  Ciphertext(::google::protobuf::Arena* arena, Ciphertext&& from) noexcept
      : Ciphertext(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAFieldNumber = 1,
    kBFieldNumber = 2,
    kPtShapeFieldNumber = 3,
    kStateFieldNumber = 4,
  };
  // .lattica_proto.TensorHolder a = 1;
  bool has_a() const;
  void clear_a() ;
  const ::lattica_proto::TensorHolder& a() const;
  PROTOBUF_NODISCARD ::lattica_proto::TensorHolder* release_a();
  ::lattica_proto::TensorHolder* mutable_a();
  void set_allocated_a(::lattica_proto::TensorHolder* value);
  void unsafe_arena_set_allocated_a(::lattica_proto::TensorHolder* value);
  ::lattica_proto::TensorHolder* unsafe_arena_release_a();

  private:
  const ::lattica_proto::TensorHolder& _internal_a() const;
  ::lattica_proto::TensorHolder* _internal_mutable_a();

  public:
  // .lattica_proto.TensorHolder b = 2;
  bool has_b() const;
  void clear_b() ;
  const ::lattica_proto::TensorHolder& b() const;
  PROTOBUF_NODISCARD ::lattica_proto::TensorHolder* release_b();
  ::lattica_proto::TensorHolder* mutable_b();
  void set_allocated_b(::lattica_proto::TensorHolder* value);
  void unsafe_arena_set_allocated_b(::lattica_proto::TensorHolder* value);
  ::lattica_proto::TensorHolder* unsafe_arena_release_b();

  private:
  const ::lattica_proto::TensorHolder& _internal_b() const;
  ::lattica_proto::TensorHolder* _internal_mutable_b();

  public:
  // .lattica_proto.PtShape pt_shape = 3;
  bool has_pt_shape() const;
  void clear_pt_shape() ;
  const ::lattica_proto::PtShape& pt_shape() const;
  PROTOBUF_NODISCARD ::lattica_proto::PtShape* release_pt_shape();
  ::lattica_proto::PtShape* mutable_pt_shape();
  void set_allocated_pt_shape(::lattica_proto::PtShape* value);
  void unsafe_arena_set_allocated_pt_shape(::lattica_proto::PtShape* value);
  ::lattica_proto::PtShape* unsafe_arena_release_pt_shape();

  private:
  const ::lattica_proto::PtShape& _internal_pt_shape() const;
  ::lattica_proto::PtShape* _internal_mutable_pt_shape();

  public:
  // optional .lattica_proto.State state = 4;
  bool has_state() const;
  void clear_state() ;
  const ::lattica_proto::State& state() const;
  PROTOBUF_NODISCARD ::lattica_proto::State* release_state();
  ::lattica_proto::State* mutable_state();
  void set_allocated_state(::lattica_proto::State* value);
  void unsafe_arena_set_allocated_state(::lattica_proto::State* value);
  ::lattica_proto::State* unsafe_arena_release_state();

  private:
  const ::lattica_proto::State& _internal_state() const;
  ::lattica_proto::State* _internal_mutable_state();

  public:
  // @@protoc_insertion_point(class_scope:lattica_proto.Ciphertext)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 4,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Ciphertext_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Ciphertext& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::lattica_proto::TensorHolder* a_;
    ::lattica_proto::TensorHolder* b_;
    ::lattica_proto::PtShape* pt_shape_;
    ::lattica_proto::State* state_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_serialization_2fciphertexts_2eproto;
};
// -------------------------------------------------------------------

class RBGV_Ciphertext final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lattica_proto.RBGV_Ciphertext) */ {
 public:
  inline RBGV_Ciphertext() : RBGV_Ciphertext(nullptr) {}
  ~RBGV_Ciphertext() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RBGV_Ciphertext(
      ::google::protobuf::internal::ConstantInitialized);

  inline RBGV_Ciphertext(const RBGV_Ciphertext& from) : RBGV_Ciphertext(nullptr, from) {}
  inline RBGV_Ciphertext(RBGV_Ciphertext&& from) noexcept
      : RBGV_Ciphertext(nullptr, std::move(from)) {}
  inline RBGV_Ciphertext& operator=(const RBGV_Ciphertext& from) {
    CopyFrom(from);
    return *this;
  }
  inline RBGV_Ciphertext& operator=(RBGV_Ciphertext&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RBGV_Ciphertext& default_instance() {
    return *internal_default_instance();
  }
  static inline const RBGV_Ciphertext* internal_default_instance() {
    return reinterpret_cast<const RBGV_Ciphertext*>(
        &_RBGV_Ciphertext_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(RBGV_Ciphertext& a, RBGV_Ciphertext& b) { a.Swap(&b); }
  inline void Swap(RBGV_Ciphertext* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RBGV_Ciphertext* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RBGV_Ciphertext* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RBGV_Ciphertext>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RBGV_Ciphertext& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RBGV_Ciphertext& from) { RBGV_Ciphertext::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RBGV_Ciphertext* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lattica_proto.RBGV_Ciphertext"; }

 protected:
  explicit RBGV_Ciphertext(::google::protobuf::Arena* arena);
  RBGV_Ciphertext(::google::protobuf::Arena* arena, const RBGV_Ciphertext& from);
  RBGV_Ciphertext(::google::protobuf::Arena* arena, RBGV_Ciphertext&& from) noexcept
      : RBGV_Ciphertext(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCiphertextFieldNumber = 1,
    kCorrectionFactorFieldNumber = 2,
  };
  // .lattica_proto.Ciphertext ciphertext = 1;
  bool has_ciphertext() const;
  void clear_ciphertext() ;
  const ::lattica_proto::Ciphertext& ciphertext() const;
  PROTOBUF_NODISCARD ::lattica_proto::Ciphertext* release_ciphertext();
  ::lattica_proto::Ciphertext* mutable_ciphertext();
  void set_allocated_ciphertext(::lattica_proto::Ciphertext* value);
  void unsafe_arena_set_allocated_ciphertext(::lattica_proto::Ciphertext* value);
  ::lattica_proto::Ciphertext* unsafe_arena_release_ciphertext();

  private:
  const ::lattica_proto::Ciphertext& _internal_ciphertext() const;
  ::lattica_proto::Ciphertext* _internal_mutable_ciphertext();

  public:
  // int64 correction_factor = 2;
  void clear_correction_factor() ;
  ::int64_t correction_factor() const;
  void set_correction_factor(::int64_t value);

  private:
  ::int64_t _internal_correction_factor() const;
  void _internal_set_correction_factor(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lattica_proto.RBGV_Ciphertext)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RBGV_Ciphertext_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RBGV_Ciphertext& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::lattica_proto::Ciphertext* ciphertext_;
    ::int64_t correction_factor_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_serialization_2fciphertexts_2eproto;
};
// -------------------------------------------------------------------

class CKKS_Ciphertext final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lattica_proto.CKKS_Ciphertext) */ {
 public:
  inline CKKS_Ciphertext() : CKKS_Ciphertext(nullptr) {}
  ~CKKS_Ciphertext() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CKKS_Ciphertext(
      ::google::protobuf::internal::ConstantInitialized);

  inline CKKS_Ciphertext(const CKKS_Ciphertext& from) : CKKS_Ciphertext(nullptr, from) {}
  inline CKKS_Ciphertext(CKKS_Ciphertext&& from) noexcept
      : CKKS_Ciphertext(nullptr, std::move(from)) {}
  inline CKKS_Ciphertext& operator=(const CKKS_Ciphertext& from) {
    CopyFrom(from);
    return *this;
  }
  inline CKKS_Ciphertext& operator=(CKKS_Ciphertext&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CKKS_Ciphertext& default_instance() {
    return *internal_default_instance();
  }
  static inline const CKKS_Ciphertext* internal_default_instance() {
    return reinterpret_cast<const CKKS_Ciphertext*>(
        &_CKKS_Ciphertext_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CKKS_Ciphertext& a, CKKS_Ciphertext& b) { a.Swap(&b); }
  inline void Swap(CKKS_Ciphertext* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CKKS_Ciphertext* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CKKS_Ciphertext* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CKKS_Ciphertext>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CKKS_Ciphertext& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CKKS_Ciphertext& from) { CKKS_Ciphertext::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CKKS_Ciphertext* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lattica_proto.CKKS_Ciphertext"; }

 protected:
  explicit CKKS_Ciphertext(::google::protobuf::Arena* arena);
  CKKS_Ciphertext(::google::protobuf::Arena* arena, const CKKS_Ciphertext& from);
  CKKS_Ciphertext(::google::protobuf::Arena* arena, CKKS_Ciphertext&& from) noexcept
      : CKKS_Ciphertext(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPtScaleFieldNumber = 2,
    kCiphertextFieldNumber = 1,
  };
  // repeated double pt_scale = 2;
  int pt_scale_size() const;
  private:
  int _internal_pt_scale_size() const;

  public:
  void clear_pt_scale() ;
  double pt_scale(int index) const;
  void set_pt_scale(int index, double value);
  void add_pt_scale(double value);
  const ::google::protobuf::RepeatedField<double>& pt_scale() const;
  ::google::protobuf::RepeatedField<double>* mutable_pt_scale();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_pt_scale() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_pt_scale();

  public:
  // .lattica_proto.Ciphertext ciphertext = 1;
  bool has_ciphertext() const;
  void clear_ciphertext() ;
  const ::lattica_proto::Ciphertext& ciphertext() const;
  PROTOBUF_NODISCARD ::lattica_proto::Ciphertext* release_ciphertext();
  ::lattica_proto::Ciphertext* mutable_ciphertext();
  void set_allocated_ciphertext(::lattica_proto::Ciphertext* value);
  void unsafe_arena_set_allocated_ciphertext(::lattica_proto::Ciphertext* value);
  ::lattica_proto::Ciphertext* unsafe_arena_release_ciphertext();

  private:
  const ::lattica_proto::Ciphertext& _internal_ciphertext() const;
  ::lattica_proto::Ciphertext* _internal_mutable_ciphertext();

  public:
  // @@protoc_insertion_point(class_scope:lattica_proto.CKKS_Ciphertext)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CKKS_Ciphertext_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CKKS_Ciphertext& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<double> pt_scale_;
    ::lattica_proto::Ciphertext* ciphertext_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_serialization_2fciphertexts_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Ciphertext

// .lattica_proto.TensorHolder a = 1;
inline bool Ciphertext::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.a_ != nullptr);
  return value;
}
inline const ::lattica_proto::TensorHolder& Ciphertext::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lattica_proto::TensorHolder* p = _impl_.a_;
  return p != nullptr ? *p : reinterpret_cast<const ::lattica_proto::TensorHolder&>(::lattica_proto::_TensorHolder_default_instance_);
}
inline const ::lattica_proto::TensorHolder& Ciphertext::a() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lattica_proto.Ciphertext.a)
  return _internal_a();
}
inline void Ciphertext::unsafe_arena_set_allocated_a(::lattica_proto::TensorHolder* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.a_);
  }
  _impl_.a_ = reinterpret_cast<::lattica_proto::TensorHolder*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lattica_proto.Ciphertext.a)
}
inline ::lattica_proto::TensorHolder* Ciphertext::release_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lattica_proto::TensorHolder* released = _impl_.a_;
  _impl_.a_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lattica_proto::TensorHolder* Ciphertext::unsafe_arena_release_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lattica_proto.Ciphertext.a)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lattica_proto::TensorHolder* temp = _impl_.a_;
  _impl_.a_ = nullptr;
  return temp;
}
inline ::lattica_proto::TensorHolder* Ciphertext::_internal_mutable_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.a_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lattica_proto::TensorHolder>(GetArena());
    _impl_.a_ = reinterpret_cast<::lattica_proto::TensorHolder*>(p);
  }
  return _impl_.a_;
}
inline ::lattica_proto::TensorHolder* Ciphertext::mutable_a() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lattica_proto::TensorHolder* _msg = _internal_mutable_a();
  // @@protoc_insertion_point(field_mutable:lattica_proto.Ciphertext.a)
  return _msg;
}
inline void Ciphertext::set_allocated_a(::lattica_proto::TensorHolder* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.a_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.a_ = reinterpret_cast<::lattica_proto::TensorHolder*>(value);
  // @@protoc_insertion_point(field_set_allocated:lattica_proto.Ciphertext.a)
}

// .lattica_proto.TensorHolder b = 2;
inline bool Ciphertext::has_b() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.b_ != nullptr);
  return value;
}
inline const ::lattica_proto::TensorHolder& Ciphertext::_internal_b() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lattica_proto::TensorHolder* p = _impl_.b_;
  return p != nullptr ? *p : reinterpret_cast<const ::lattica_proto::TensorHolder&>(::lattica_proto::_TensorHolder_default_instance_);
}
inline const ::lattica_proto::TensorHolder& Ciphertext::b() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lattica_proto.Ciphertext.b)
  return _internal_b();
}
inline void Ciphertext::unsafe_arena_set_allocated_b(::lattica_proto::TensorHolder* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.b_);
  }
  _impl_.b_ = reinterpret_cast<::lattica_proto::TensorHolder*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lattica_proto.Ciphertext.b)
}
inline ::lattica_proto::TensorHolder* Ciphertext::release_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::lattica_proto::TensorHolder* released = _impl_.b_;
  _impl_.b_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lattica_proto::TensorHolder* Ciphertext::unsafe_arena_release_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lattica_proto.Ciphertext.b)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::lattica_proto::TensorHolder* temp = _impl_.b_;
  _impl_.b_ = nullptr;
  return temp;
}
inline ::lattica_proto::TensorHolder* Ciphertext::_internal_mutable_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.b_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lattica_proto::TensorHolder>(GetArena());
    _impl_.b_ = reinterpret_cast<::lattica_proto::TensorHolder*>(p);
  }
  return _impl_.b_;
}
inline ::lattica_proto::TensorHolder* Ciphertext::mutable_b() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::lattica_proto::TensorHolder* _msg = _internal_mutable_b();
  // @@protoc_insertion_point(field_mutable:lattica_proto.Ciphertext.b)
  return _msg;
}
inline void Ciphertext::set_allocated_b(::lattica_proto::TensorHolder* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.b_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.b_ = reinterpret_cast<::lattica_proto::TensorHolder*>(value);
  // @@protoc_insertion_point(field_set_allocated:lattica_proto.Ciphertext.b)
}

// .lattica_proto.PtShape pt_shape = 3;
inline bool Ciphertext::has_pt_shape() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pt_shape_ != nullptr);
  return value;
}
inline const ::lattica_proto::PtShape& Ciphertext::_internal_pt_shape() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lattica_proto::PtShape* p = _impl_.pt_shape_;
  return p != nullptr ? *p : reinterpret_cast<const ::lattica_proto::PtShape&>(::lattica_proto::_PtShape_default_instance_);
}
inline const ::lattica_proto::PtShape& Ciphertext::pt_shape() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lattica_proto.Ciphertext.pt_shape)
  return _internal_pt_shape();
}
inline void Ciphertext::unsafe_arena_set_allocated_pt_shape(::lattica_proto::PtShape* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pt_shape_);
  }
  _impl_.pt_shape_ = reinterpret_cast<::lattica_proto::PtShape*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lattica_proto.Ciphertext.pt_shape)
}
inline ::lattica_proto::PtShape* Ciphertext::release_pt_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::lattica_proto::PtShape* released = _impl_.pt_shape_;
  _impl_.pt_shape_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lattica_proto::PtShape* Ciphertext::unsafe_arena_release_pt_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lattica_proto.Ciphertext.pt_shape)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::lattica_proto::PtShape* temp = _impl_.pt_shape_;
  _impl_.pt_shape_ = nullptr;
  return temp;
}
inline ::lattica_proto::PtShape* Ciphertext::_internal_mutable_pt_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pt_shape_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lattica_proto::PtShape>(GetArena());
    _impl_.pt_shape_ = reinterpret_cast<::lattica_proto::PtShape*>(p);
  }
  return _impl_.pt_shape_;
}
inline ::lattica_proto::PtShape* Ciphertext::mutable_pt_shape() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::lattica_proto::PtShape* _msg = _internal_mutable_pt_shape();
  // @@protoc_insertion_point(field_mutable:lattica_proto.Ciphertext.pt_shape)
  return _msg;
}
inline void Ciphertext::set_allocated_pt_shape(::lattica_proto::PtShape* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pt_shape_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.pt_shape_ = reinterpret_cast<::lattica_proto::PtShape*>(value);
  // @@protoc_insertion_point(field_set_allocated:lattica_proto.Ciphertext.pt_shape)
}

// optional .lattica_proto.State state = 4;
inline bool Ciphertext::has_state() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.state_ != nullptr);
  return value;
}
inline const ::lattica_proto::State& Ciphertext::_internal_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lattica_proto::State* p = _impl_.state_;
  return p != nullptr ? *p : reinterpret_cast<const ::lattica_proto::State&>(::lattica_proto::_State_default_instance_);
}
inline const ::lattica_proto::State& Ciphertext::state() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lattica_proto.Ciphertext.state)
  return _internal_state();
}
inline void Ciphertext::unsafe_arena_set_allocated_state(::lattica_proto::State* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.state_);
  }
  _impl_.state_ = reinterpret_cast<::lattica_proto::State*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lattica_proto.Ciphertext.state)
}
inline ::lattica_proto::State* Ciphertext::release_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::lattica_proto::State* released = _impl_.state_;
  _impl_.state_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lattica_proto::State* Ciphertext::unsafe_arena_release_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lattica_proto.Ciphertext.state)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::lattica_proto::State* temp = _impl_.state_;
  _impl_.state_ = nullptr;
  return temp;
}
inline ::lattica_proto::State* Ciphertext::_internal_mutable_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.state_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lattica_proto::State>(GetArena());
    _impl_.state_ = reinterpret_cast<::lattica_proto::State*>(p);
  }
  return _impl_.state_;
}
inline ::lattica_proto::State* Ciphertext::mutable_state() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::lattica_proto::State* _msg = _internal_mutable_state();
  // @@protoc_insertion_point(field_mutable:lattica_proto.Ciphertext.state)
  return _msg;
}
inline void Ciphertext::set_allocated_state(::lattica_proto::State* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.state_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.state_ = reinterpret_cast<::lattica_proto::State*>(value);
  // @@protoc_insertion_point(field_set_allocated:lattica_proto.Ciphertext.state)
}

// -------------------------------------------------------------------

// RBGV_Ciphertext

// .lattica_proto.Ciphertext ciphertext = 1;
inline bool RBGV_Ciphertext::has_ciphertext() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ciphertext_ != nullptr);
  return value;
}
inline void RBGV_Ciphertext::clear_ciphertext() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ciphertext_ != nullptr) _impl_.ciphertext_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lattica_proto::Ciphertext& RBGV_Ciphertext::_internal_ciphertext() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lattica_proto::Ciphertext* p = _impl_.ciphertext_;
  return p != nullptr ? *p : reinterpret_cast<const ::lattica_proto::Ciphertext&>(::lattica_proto::_Ciphertext_default_instance_);
}
inline const ::lattica_proto::Ciphertext& RBGV_Ciphertext::ciphertext() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lattica_proto.RBGV_Ciphertext.ciphertext)
  return _internal_ciphertext();
}
inline void RBGV_Ciphertext::unsafe_arena_set_allocated_ciphertext(::lattica_proto::Ciphertext* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ciphertext_);
  }
  _impl_.ciphertext_ = reinterpret_cast<::lattica_proto::Ciphertext*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lattica_proto.RBGV_Ciphertext.ciphertext)
}
inline ::lattica_proto::Ciphertext* RBGV_Ciphertext::release_ciphertext() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lattica_proto::Ciphertext* released = _impl_.ciphertext_;
  _impl_.ciphertext_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lattica_proto::Ciphertext* RBGV_Ciphertext::unsafe_arena_release_ciphertext() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lattica_proto.RBGV_Ciphertext.ciphertext)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lattica_proto::Ciphertext* temp = _impl_.ciphertext_;
  _impl_.ciphertext_ = nullptr;
  return temp;
}
inline ::lattica_proto::Ciphertext* RBGV_Ciphertext::_internal_mutable_ciphertext() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ciphertext_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lattica_proto::Ciphertext>(GetArena());
    _impl_.ciphertext_ = reinterpret_cast<::lattica_proto::Ciphertext*>(p);
  }
  return _impl_.ciphertext_;
}
inline ::lattica_proto::Ciphertext* RBGV_Ciphertext::mutable_ciphertext() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lattica_proto::Ciphertext* _msg = _internal_mutable_ciphertext();
  // @@protoc_insertion_point(field_mutable:lattica_proto.RBGV_Ciphertext.ciphertext)
  return _msg;
}
inline void RBGV_Ciphertext::set_allocated_ciphertext(::lattica_proto::Ciphertext* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.ciphertext_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.ciphertext_ = reinterpret_cast<::lattica_proto::Ciphertext*>(value);
  // @@protoc_insertion_point(field_set_allocated:lattica_proto.RBGV_Ciphertext.ciphertext)
}

// int64 correction_factor = 2;
inline void RBGV_Ciphertext::clear_correction_factor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.correction_factor_ = ::int64_t{0};
}
inline ::int64_t RBGV_Ciphertext::correction_factor() const {
  // @@protoc_insertion_point(field_get:lattica_proto.RBGV_Ciphertext.correction_factor)
  return _internal_correction_factor();
}
inline void RBGV_Ciphertext::set_correction_factor(::int64_t value) {
  _internal_set_correction_factor(value);
  // @@protoc_insertion_point(field_set:lattica_proto.RBGV_Ciphertext.correction_factor)
}
inline ::int64_t RBGV_Ciphertext::_internal_correction_factor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.correction_factor_;
}
inline void RBGV_Ciphertext::_internal_set_correction_factor(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.correction_factor_ = value;
}

// -------------------------------------------------------------------

// CKKS_Pt_Scale

// repeated double pt_scale = 1;
inline int CKKS_Pt_Scale::_internal_pt_scale_size() const {
  return _internal_pt_scale().size();
}
inline int CKKS_Pt_Scale::pt_scale_size() const {
  return _internal_pt_scale_size();
}
inline void CKKS_Pt_Scale::clear_pt_scale() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pt_scale_.Clear();
}
inline double CKKS_Pt_Scale::pt_scale(int index) const {
  // @@protoc_insertion_point(field_get:lattica_proto.CKKS_Pt_Scale.pt_scale)
  return _internal_pt_scale().Get(index);
}
inline void CKKS_Pt_Scale::set_pt_scale(int index, double value) {
  _internal_mutable_pt_scale()->Set(index, value);
  // @@protoc_insertion_point(field_set:lattica_proto.CKKS_Pt_Scale.pt_scale)
}
inline void CKKS_Pt_Scale::add_pt_scale(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_pt_scale()->Add(value);
  // @@protoc_insertion_point(field_add:lattica_proto.CKKS_Pt_Scale.pt_scale)
}
inline const ::google::protobuf::RepeatedField<double>& CKKS_Pt_Scale::pt_scale() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lattica_proto.CKKS_Pt_Scale.pt_scale)
  return _internal_pt_scale();
}
inline ::google::protobuf::RepeatedField<double>* CKKS_Pt_Scale::mutable_pt_scale()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lattica_proto.CKKS_Pt_Scale.pt_scale)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pt_scale();
}
inline const ::google::protobuf::RepeatedField<double>&
CKKS_Pt_Scale::_internal_pt_scale() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pt_scale_;
}
inline ::google::protobuf::RepeatedField<double>* CKKS_Pt_Scale::_internal_mutable_pt_scale() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pt_scale_;
}

// -------------------------------------------------------------------

// CKKS_Ciphertext

// .lattica_proto.Ciphertext ciphertext = 1;
inline bool CKKS_Ciphertext::has_ciphertext() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ciphertext_ != nullptr);
  return value;
}
inline void CKKS_Ciphertext::clear_ciphertext() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ciphertext_ != nullptr) _impl_.ciphertext_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lattica_proto::Ciphertext& CKKS_Ciphertext::_internal_ciphertext() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lattica_proto::Ciphertext* p = _impl_.ciphertext_;
  return p != nullptr ? *p : reinterpret_cast<const ::lattica_proto::Ciphertext&>(::lattica_proto::_Ciphertext_default_instance_);
}
inline const ::lattica_proto::Ciphertext& CKKS_Ciphertext::ciphertext() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lattica_proto.CKKS_Ciphertext.ciphertext)
  return _internal_ciphertext();
}
inline void CKKS_Ciphertext::unsafe_arena_set_allocated_ciphertext(::lattica_proto::Ciphertext* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ciphertext_);
  }
  _impl_.ciphertext_ = reinterpret_cast<::lattica_proto::Ciphertext*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lattica_proto.CKKS_Ciphertext.ciphertext)
}
inline ::lattica_proto::Ciphertext* CKKS_Ciphertext::release_ciphertext() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lattica_proto::Ciphertext* released = _impl_.ciphertext_;
  _impl_.ciphertext_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lattica_proto::Ciphertext* CKKS_Ciphertext::unsafe_arena_release_ciphertext() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lattica_proto.CKKS_Ciphertext.ciphertext)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lattica_proto::Ciphertext* temp = _impl_.ciphertext_;
  _impl_.ciphertext_ = nullptr;
  return temp;
}
inline ::lattica_proto::Ciphertext* CKKS_Ciphertext::_internal_mutable_ciphertext() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ciphertext_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lattica_proto::Ciphertext>(GetArena());
    _impl_.ciphertext_ = reinterpret_cast<::lattica_proto::Ciphertext*>(p);
  }
  return _impl_.ciphertext_;
}
inline ::lattica_proto::Ciphertext* CKKS_Ciphertext::mutable_ciphertext() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lattica_proto::Ciphertext* _msg = _internal_mutable_ciphertext();
  // @@protoc_insertion_point(field_mutable:lattica_proto.CKKS_Ciphertext.ciphertext)
  return _msg;
}
inline void CKKS_Ciphertext::set_allocated_ciphertext(::lattica_proto::Ciphertext* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.ciphertext_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.ciphertext_ = reinterpret_cast<::lattica_proto::Ciphertext*>(value);
  // @@protoc_insertion_point(field_set_allocated:lattica_proto.CKKS_Ciphertext.ciphertext)
}

// repeated double pt_scale = 2;
inline int CKKS_Ciphertext::_internal_pt_scale_size() const {
  return _internal_pt_scale().size();
}
inline int CKKS_Ciphertext::pt_scale_size() const {
  return _internal_pt_scale_size();
}
inline void CKKS_Ciphertext::clear_pt_scale() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pt_scale_.Clear();
}
inline double CKKS_Ciphertext::pt_scale(int index) const {
  // @@protoc_insertion_point(field_get:lattica_proto.CKKS_Ciphertext.pt_scale)
  return _internal_pt_scale().Get(index);
}
inline void CKKS_Ciphertext::set_pt_scale(int index, double value) {
  _internal_mutable_pt_scale()->Set(index, value);
  // @@protoc_insertion_point(field_set:lattica_proto.CKKS_Ciphertext.pt_scale)
}
inline void CKKS_Ciphertext::add_pt_scale(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_pt_scale()->Add(value);
  // @@protoc_insertion_point(field_add:lattica_proto.CKKS_Ciphertext.pt_scale)
}
inline const ::google::protobuf::RepeatedField<double>& CKKS_Ciphertext::pt_scale() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lattica_proto.CKKS_Ciphertext.pt_scale)
  return _internal_pt_scale();
}
inline ::google::protobuf::RepeatedField<double>* CKKS_Ciphertext::mutable_pt_scale()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lattica_proto.CKKS_Ciphertext.pt_scale)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pt_scale();
}
inline const ::google::protobuf::RepeatedField<double>&
CKKS_Ciphertext::_internal_pt_scale() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pt_scale_;
}
inline ::google::protobuf::RepeatedField<double>* CKKS_Ciphertext::_internal_mutable_pt_scale() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pt_scale_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace lattica_proto


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_serialization_2fciphertexts_2eproto_2epb_2eh
