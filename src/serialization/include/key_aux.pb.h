// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: serialization/key_aux.proto
// Protobuf C++ Version: 5.27.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_serialization_2fkey_5faux_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_serialization_2fkey_5faux_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "ciphertexts.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_serialization_2fkey_5faux_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_serialization_2fkey_5faux_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_serialization_2fkey_5faux_2eproto;
namespace lattica_proto {
class CKKS_AuxKey;
struct CKKS_AuxKeyDefaultTypeInternal;
extern CKKS_AuxKeyDefaultTypeInternal _CKKS_AuxKey_default_instance_;
class RBGV_AuxKey;
struct RBGV_AuxKeyDefaultTypeInternal;
extern RBGV_AuxKeyDefaultTypeInternal _RBGV_AuxKey_default_instance_;
}  // namespace lattica_proto
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace lattica_proto {

// ===================================================================


// -------------------------------------------------------------------

class RBGV_AuxKey final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lattica_proto.RBGV_AuxKey) */ {
 public:
  inline RBGV_AuxKey() : RBGV_AuxKey(nullptr) {}
  ~RBGV_AuxKey() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RBGV_AuxKey(
      ::google::protobuf::internal::ConstantInitialized);

  inline RBGV_AuxKey(const RBGV_AuxKey& from) : RBGV_AuxKey(nullptr, from) {}
  inline RBGV_AuxKey(RBGV_AuxKey&& from) noexcept
      : RBGV_AuxKey(nullptr, std::move(from)) {}
  inline RBGV_AuxKey& operator=(const RBGV_AuxKey& from) {
    CopyFrom(from);
    return *this;
  }
  inline RBGV_AuxKey& operator=(RBGV_AuxKey&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RBGV_AuxKey& default_instance() {
    return *internal_default_instance();
  }
  static inline const RBGV_AuxKey* internal_default_instance() {
    return reinterpret_cast<const RBGV_AuxKey*>(
        &_RBGV_AuxKey_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(RBGV_AuxKey& a, RBGV_AuxKey& b) { a.Swap(&b); }
  inline void Swap(RBGV_AuxKey* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RBGV_AuxKey* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RBGV_AuxKey* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RBGV_AuxKey>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RBGV_AuxKey& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RBGV_AuxKey& from) { RBGV_AuxKey::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RBGV_AuxKey* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lattica_proto.RBGV_AuxKey"; }

 protected:
  explicit RBGV_AuxKey(::google::protobuf::Arena* arena);
  RBGV_AuxKey(::google::protobuf::Arena* arena, const RBGV_AuxKey& from);
  RBGV_AuxKey(::google::protobuf::Arena* arena, RBGV_AuxKey&& from) noexcept
      : RBGV_AuxKey(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBaseKeyFieldNumber = 1,
    kFullKeyFieldNumber = 2,
    kIdentityKeyFieldNumber = 3,
    kSquareKeyFieldNumber = 4,
  };
  // optional .lattica_proto.RBGV_Ciphertext base_key = 1;
  bool has_base_key() const;
  void clear_base_key() ;
  const ::lattica_proto::RBGV_Ciphertext& base_key() const;
  PROTOBUF_NODISCARD ::lattica_proto::RBGV_Ciphertext* release_base_key();
  ::lattica_proto::RBGV_Ciphertext* mutable_base_key();
  void set_allocated_base_key(::lattica_proto::RBGV_Ciphertext* value);
  void unsafe_arena_set_allocated_base_key(::lattica_proto::RBGV_Ciphertext* value);
  ::lattica_proto::RBGV_Ciphertext* unsafe_arena_release_base_key();

  private:
  const ::lattica_proto::RBGV_Ciphertext& _internal_base_key() const;
  ::lattica_proto::RBGV_Ciphertext* _internal_mutable_base_key();

  public:
  // optional .lattica_proto.RBGV_Ciphertext full_key = 2;
  bool has_full_key() const;
  void clear_full_key() ;
  const ::lattica_proto::RBGV_Ciphertext& full_key() const;
  PROTOBUF_NODISCARD ::lattica_proto::RBGV_Ciphertext* release_full_key();
  ::lattica_proto::RBGV_Ciphertext* mutable_full_key();
  void set_allocated_full_key(::lattica_proto::RBGV_Ciphertext* value);
  void unsafe_arena_set_allocated_full_key(::lattica_proto::RBGV_Ciphertext* value);
  ::lattica_proto::RBGV_Ciphertext* unsafe_arena_release_full_key();

  private:
  const ::lattica_proto::RBGV_Ciphertext& _internal_full_key() const;
  ::lattica_proto::RBGV_Ciphertext* _internal_mutable_full_key();

  public:
  // optional .lattica_proto.RBGV_Ciphertext identity_key = 3;
  bool has_identity_key() const;
  void clear_identity_key() ;
  const ::lattica_proto::RBGV_Ciphertext& identity_key() const;
  PROTOBUF_NODISCARD ::lattica_proto::RBGV_Ciphertext* release_identity_key();
  ::lattica_proto::RBGV_Ciphertext* mutable_identity_key();
  void set_allocated_identity_key(::lattica_proto::RBGV_Ciphertext* value);
  void unsafe_arena_set_allocated_identity_key(::lattica_proto::RBGV_Ciphertext* value);
  ::lattica_proto::RBGV_Ciphertext* unsafe_arena_release_identity_key();

  private:
  const ::lattica_proto::RBGV_Ciphertext& _internal_identity_key() const;
  ::lattica_proto::RBGV_Ciphertext* _internal_mutable_identity_key();

  public:
  // optional .lattica_proto.RBGV_Ciphertext square_key = 4;
  bool has_square_key() const;
  void clear_square_key() ;
  const ::lattica_proto::RBGV_Ciphertext& square_key() const;
  PROTOBUF_NODISCARD ::lattica_proto::RBGV_Ciphertext* release_square_key();
  ::lattica_proto::RBGV_Ciphertext* mutable_square_key();
  void set_allocated_square_key(::lattica_proto::RBGV_Ciphertext* value);
  void unsafe_arena_set_allocated_square_key(::lattica_proto::RBGV_Ciphertext* value);
  ::lattica_proto::RBGV_Ciphertext* unsafe_arena_release_square_key();

  private:
  const ::lattica_proto::RBGV_Ciphertext& _internal_square_key() const;
  ::lattica_proto::RBGV_Ciphertext* _internal_mutable_square_key();

  public:
  // @@protoc_insertion_point(class_scope:lattica_proto.RBGV_AuxKey)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 4,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RBGV_AuxKey_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RBGV_AuxKey& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::lattica_proto::RBGV_Ciphertext* base_key_;
    ::lattica_proto::RBGV_Ciphertext* full_key_;
    ::lattica_proto::RBGV_Ciphertext* identity_key_;
    ::lattica_proto::RBGV_Ciphertext* square_key_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_serialization_2fkey_5faux_2eproto;
};
// -------------------------------------------------------------------

class CKKS_AuxKey final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lattica_proto.CKKS_AuxKey) */ {
 public:
  inline CKKS_AuxKey() : CKKS_AuxKey(nullptr) {}
  ~CKKS_AuxKey() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CKKS_AuxKey(
      ::google::protobuf::internal::ConstantInitialized);

  inline CKKS_AuxKey(const CKKS_AuxKey& from) : CKKS_AuxKey(nullptr, from) {}
  inline CKKS_AuxKey(CKKS_AuxKey&& from) noexcept
      : CKKS_AuxKey(nullptr, std::move(from)) {}
  inline CKKS_AuxKey& operator=(const CKKS_AuxKey& from) {
    CopyFrom(from);
    return *this;
  }
  inline CKKS_AuxKey& operator=(CKKS_AuxKey&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CKKS_AuxKey& default_instance() {
    return *internal_default_instance();
  }
  static inline const CKKS_AuxKey* internal_default_instance() {
    return reinterpret_cast<const CKKS_AuxKey*>(
        &_CKKS_AuxKey_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CKKS_AuxKey& a, CKKS_AuxKey& b) { a.Swap(&b); }
  inline void Swap(CKKS_AuxKey* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CKKS_AuxKey* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CKKS_AuxKey* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CKKS_AuxKey>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CKKS_AuxKey& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CKKS_AuxKey& from) { CKKS_AuxKey::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CKKS_AuxKey* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lattica_proto.CKKS_AuxKey"; }

 protected:
  explicit CKKS_AuxKey(::google::protobuf::Arena* arena);
  CKKS_AuxKey(::google::protobuf::Arena* arena, const CKKS_AuxKey& from);
  CKKS_AuxKey(::google::protobuf::Arena* arena, CKKS_AuxKey&& from) noexcept
      : CKKS_AuxKey(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBaseKeyFieldNumber = 1,
    kFullKeyFieldNumber = 2,
    kIdentityKeyFieldNumber = 3,
    kSquareKeyFieldNumber = 4,
  };
  // optional .lattica_proto.CKKS_Ciphertext base_key = 1;
  bool has_base_key() const;
  void clear_base_key() ;
  const ::lattica_proto::CKKS_Ciphertext& base_key() const;
  PROTOBUF_NODISCARD ::lattica_proto::CKKS_Ciphertext* release_base_key();
  ::lattica_proto::CKKS_Ciphertext* mutable_base_key();
  void set_allocated_base_key(::lattica_proto::CKKS_Ciphertext* value);
  void unsafe_arena_set_allocated_base_key(::lattica_proto::CKKS_Ciphertext* value);
  ::lattica_proto::CKKS_Ciphertext* unsafe_arena_release_base_key();

  private:
  const ::lattica_proto::CKKS_Ciphertext& _internal_base_key() const;
  ::lattica_proto::CKKS_Ciphertext* _internal_mutable_base_key();

  public:
  // optional .lattica_proto.CKKS_Ciphertext full_key = 2;
  bool has_full_key() const;
  void clear_full_key() ;
  const ::lattica_proto::CKKS_Ciphertext& full_key() const;
  PROTOBUF_NODISCARD ::lattica_proto::CKKS_Ciphertext* release_full_key();
  ::lattica_proto::CKKS_Ciphertext* mutable_full_key();
  void set_allocated_full_key(::lattica_proto::CKKS_Ciphertext* value);
  void unsafe_arena_set_allocated_full_key(::lattica_proto::CKKS_Ciphertext* value);
  ::lattica_proto::CKKS_Ciphertext* unsafe_arena_release_full_key();

  private:
  const ::lattica_proto::CKKS_Ciphertext& _internal_full_key() const;
  ::lattica_proto::CKKS_Ciphertext* _internal_mutable_full_key();

  public:
  // optional .lattica_proto.CKKS_Ciphertext identity_key = 3;
  bool has_identity_key() const;
  void clear_identity_key() ;
  const ::lattica_proto::CKKS_Ciphertext& identity_key() const;
  PROTOBUF_NODISCARD ::lattica_proto::CKKS_Ciphertext* release_identity_key();
  ::lattica_proto::CKKS_Ciphertext* mutable_identity_key();
  void set_allocated_identity_key(::lattica_proto::CKKS_Ciphertext* value);
  void unsafe_arena_set_allocated_identity_key(::lattica_proto::CKKS_Ciphertext* value);
  ::lattica_proto::CKKS_Ciphertext* unsafe_arena_release_identity_key();

  private:
  const ::lattica_proto::CKKS_Ciphertext& _internal_identity_key() const;
  ::lattica_proto::CKKS_Ciphertext* _internal_mutable_identity_key();

  public:
  // optional .lattica_proto.CKKS_Ciphertext square_key = 4;
  bool has_square_key() const;
  void clear_square_key() ;
  const ::lattica_proto::CKKS_Ciphertext& square_key() const;
  PROTOBUF_NODISCARD ::lattica_proto::CKKS_Ciphertext* release_square_key();
  ::lattica_proto::CKKS_Ciphertext* mutable_square_key();
  void set_allocated_square_key(::lattica_proto::CKKS_Ciphertext* value);
  void unsafe_arena_set_allocated_square_key(::lattica_proto::CKKS_Ciphertext* value);
  ::lattica_proto::CKKS_Ciphertext* unsafe_arena_release_square_key();

  private:
  const ::lattica_proto::CKKS_Ciphertext& _internal_square_key() const;
  ::lattica_proto::CKKS_Ciphertext* _internal_mutable_square_key();

  public:
  // @@protoc_insertion_point(class_scope:lattica_proto.CKKS_AuxKey)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 4,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CKKS_AuxKey_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CKKS_AuxKey& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::lattica_proto::CKKS_Ciphertext* base_key_;
    ::lattica_proto::CKKS_Ciphertext* full_key_;
    ::lattica_proto::CKKS_Ciphertext* identity_key_;
    ::lattica_proto::CKKS_Ciphertext* square_key_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_serialization_2fkey_5faux_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CKKS_AuxKey

// optional .lattica_proto.CKKS_Ciphertext base_key = 1;
inline bool CKKS_AuxKey::has_base_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.base_key_ != nullptr);
  return value;
}
inline const ::lattica_proto::CKKS_Ciphertext& CKKS_AuxKey::_internal_base_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lattica_proto::CKKS_Ciphertext* p = _impl_.base_key_;
  return p != nullptr ? *p : reinterpret_cast<const ::lattica_proto::CKKS_Ciphertext&>(::lattica_proto::_CKKS_Ciphertext_default_instance_);
}
inline const ::lattica_proto::CKKS_Ciphertext& CKKS_AuxKey::base_key() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lattica_proto.CKKS_AuxKey.base_key)
  return _internal_base_key();
}
inline void CKKS_AuxKey::unsafe_arena_set_allocated_base_key(::lattica_proto::CKKS_Ciphertext* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_key_);
  }
  _impl_.base_key_ = reinterpret_cast<::lattica_proto::CKKS_Ciphertext*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lattica_proto.CKKS_AuxKey.base_key)
}
inline ::lattica_proto::CKKS_Ciphertext* CKKS_AuxKey::release_base_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lattica_proto::CKKS_Ciphertext* released = _impl_.base_key_;
  _impl_.base_key_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lattica_proto::CKKS_Ciphertext* CKKS_AuxKey::unsafe_arena_release_base_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lattica_proto.CKKS_AuxKey.base_key)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lattica_proto::CKKS_Ciphertext* temp = _impl_.base_key_;
  _impl_.base_key_ = nullptr;
  return temp;
}
inline ::lattica_proto::CKKS_Ciphertext* CKKS_AuxKey::_internal_mutable_base_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_key_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lattica_proto::CKKS_Ciphertext>(GetArena());
    _impl_.base_key_ = reinterpret_cast<::lattica_proto::CKKS_Ciphertext*>(p);
  }
  return _impl_.base_key_;
}
inline ::lattica_proto::CKKS_Ciphertext* CKKS_AuxKey::mutable_base_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lattica_proto::CKKS_Ciphertext* _msg = _internal_mutable_base_key();
  // @@protoc_insertion_point(field_mutable:lattica_proto.CKKS_AuxKey.base_key)
  return _msg;
}
inline void CKKS_AuxKey::set_allocated_base_key(::lattica_proto::CKKS_Ciphertext* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_key_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.base_key_ = reinterpret_cast<::lattica_proto::CKKS_Ciphertext*>(value);
  // @@protoc_insertion_point(field_set_allocated:lattica_proto.CKKS_AuxKey.base_key)
}

// optional .lattica_proto.CKKS_Ciphertext full_key = 2;
inline bool CKKS_AuxKey::has_full_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.full_key_ != nullptr);
  return value;
}
inline const ::lattica_proto::CKKS_Ciphertext& CKKS_AuxKey::_internal_full_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lattica_proto::CKKS_Ciphertext* p = _impl_.full_key_;
  return p != nullptr ? *p : reinterpret_cast<const ::lattica_proto::CKKS_Ciphertext&>(::lattica_proto::_CKKS_Ciphertext_default_instance_);
}
inline const ::lattica_proto::CKKS_Ciphertext& CKKS_AuxKey::full_key() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lattica_proto.CKKS_AuxKey.full_key)
  return _internal_full_key();
}
inline void CKKS_AuxKey::unsafe_arena_set_allocated_full_key(::lattica_proto::CKKS_Ciphertext* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.full_key_);
  }
  _impl_.full_key_ = reinterpret_cast<::lattica_proto::CKKS_Ciphertext*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lattica_proto.CKKS_AuxKey.full_key)
}
inline ::lattica_proto::CKKS_Ciphertext* CKKS_AuxKey::release_full_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::lattica_proto::CKKS_Ciphertext* released = _impl_.full_key_;
  _impl_.full_key_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lattica_proto::CKKS_Ciphertext* CKKS_AuxKey::unsafe_arena_release_full_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lattica_proto.CKKS_AuxKey.full_key)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::lattica_proto::CKKS_Ciphertext* temp = _impl_.full_key_;
  _impl_.full_key_ = nullptr;
  return temp;
}
inline ::lattica_proto::CKKS_Ciphertext* CKKS_AuxKey::_internal_mutable_full_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.full_key_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lattica_proto::CKKS_Ciphertext>(GetArena());
    _impl_.full_key_ = reinterpret_cast<::lattica_proto::CKKS_Ciphertext*>(p);
  }
  return _impl_.full_key_;
}
inline ::lattica_proto::CKKS_Ciphertext* CKKS_AuxKey::mutable_full_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::lattica_proto::CKKS_Ciphertext* _msg = _internal_mutable_full_key();
  // @@protoc_insertion_point(field_mutable:lattica_proto.CKKS_AuxKey.full_key)
  return _msg;
}
inline void CKKS_AuxKey::set_allocated_full_key(::lattica_proto::CKKS_Ciphertext* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.full_key_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.full_key_ = reinterpret_cast<::lattica_proto::CKKS_Ciphertext*>(value);
  // @@protoc_insertion_point(field_set_allocated:lattica_proto.CKKS_AuxKey.full_key)
}

// optional .lattica_proto.CKKS_Ciphertext identity_key = 3;
inline bool CKKS_AuxKey::has_identity_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.identity_key_ != nullptr);
  return value;
}
inline const ::lattica_proto::CKKS_Ciphertext& CKKS_AuxKey::_internal_identity_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lattica_proto::CKKS_Ciphertext* p = _impl_.identity_key_;
  return p != nullptr ? *p : reinterpret_cast<const ::lattica_proto::CKKS_Ciphertext&>(::lattica_proto::_CKKS_Ciphertext_default_instance_);
}
inline const ::lattica_proto::CKKS_Ciphertext& CKKS_AuxKey::identity_key() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lattica_proto.CKKS_AuxKey.identity_key)
  return _internal_identity_key();
}
inline void CKKS_AuxKey::unsafe_arena_set_allocated_identity_key(::lattica_proto::CKKS_Ciphertext* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.identity_key_);
  }
  _impl_.identity_key_ = reinterpret_cast<::lattica_proto::CKKS_Ciphertext*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lattica_proto.CKKS_AuxKey.identity_key)
}
inline ::lattica_proto::CKKS_Ciphertext* CKKS_AuxKey::release_identity_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::lattica_proto::CKKS_Ciphertext* released = _impl_.identity_key_;
  _impl_.identity_key_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lattica_proto::CKKS_Ciphertext* CKKS_AuxKey::unsafe_arena_release_identity_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lattica_proto.CKKS_AuxKey.identity_key)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::lattica_proto::CKKS_Ciphertext* temp = _impl_.identity_key_;
  _impl_.identity_key_ = nullptr;
  return temp;
}
inline ::lattica_proto::CKKS_Ciphertext* CKKS_AuxKey::_internal_mutable_identity_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.identity_key_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lattica_proto::CKKS_Ciphertext>(GetArena());
    _impl_.identity_key_ = reinterpret_cast<::lattica_proto::CKKS_Ciphertext*>(p);
  }
  return _impl_.identity_key_;
}
inline ::lattica_proto::CKKS_Ciphertext* CKKS_AuxKey::mutable_identity_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::lattica_proto::CKKS_Ciphertext* _msg = _internal_mutable_identity_key();
  // @@protoc_insertion_point(field_mutable:lattica_proto.CKKS_AuxKey.identity_key)
  return _msg;
}
inline void CKKS_AuxKey::set_allocated_identity_key(::lattica_proto::CKKS_Ciphertext* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.identity_key_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.identity_key_ = reinterpret_cast<::lattica_proto::CKKS_Ciphertext*>(value);
  // @@protoc_insertion_point(field_set_allocated:lattica_proto.CKKS_AuxKey.identity_key)
}

// optional .lattica_proto.CKKS_Ciphertext square_key = 4;
inline bool CKKS_AuxKey::has_square_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.square_key_ != nullptr);
  return value;
}
inline const ::lattica_proto::CKKS_Ciphertext& CKKS_AuxKey::_internal_square_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lattica_proto::CKKS_Ciphertext* p = _impl_.square_key_;
  return p != nullptr ? *p : reinterpret_cast<const ::lattica_proto::CKKS_Ciphertext&>(::lattica_proto::_CKKS_Ciphertext_default_instance_);
}
inline const ::lattica_proto::CKKS_Ciphertext& CKKS_AuxKey::square_key() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lattica_proto.CKKS_AuxKey.square_key)
  return _internal_square_key();
}
inline void CKKS_AuxKey::unsafe_arena_set_allocated_square_key(::lattica_proto::CKKS_Ciphertext* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.square_key_);
  }
  _impl_.square_key_ = reinterpret_cast<::lattica_proto::CKKS_Ciphertext*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lattica_proto.CKKS_AuxKey.square_key)
}
inline ::lattica_proto::CKKS_Ciphertext* CKKS_AuxKey::release_square_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::lattica_proto::CKKS_Ciphertext* released = _impl_.square_key_;
  _impl_.square_key_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lattica_proto::CKKS_Ciphertext* CKKS_AuxKey::unsafe_arena_release_square_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lattica_proto.CKKS_AuxKey.square_key)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::lattica_proto::CKKS_Ciphertext* temp = _impl_.square_key_;
  _impl_.square_key_ = nullptr;
  return temp;
}
inline ::lattica_proto::CKKS_Ciphertext* CKKS_AuxKey::_internal_mutable_square_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.square_key_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lattica_proto::CKKS_Ciphertext>(GetArena());
    _impl_.square_key_ = reinterpret_cast<::lattica_proto::CKKS_Ciphertext*>(p);
  }
  return _impl_.square_key_;
}
inline ::lattica_proto::CKKS_Ciphertext* CKKS_AuxKey::mutable_square_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::lattica_proto::CKKS_Ciphertext* _msg = _internal_mutable_square_key();
  // @@protoc_insertion_point(field_mutable:lattica_proto.CKKS_AuxKey.square_key)
  return _msg;
}
inline void CKKS_AuxKey::set_allocated_square_key(::lattica_proto::CKKS_Ciphertext* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.square_key_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.square_key_ = reinterpret_cast<::lattica_proto::CKKS_Ciphertext*>(value);
  // @@protoc_insertion_point(field_set_allocated:lattica_proto.CKKS_AuxKey.square_key)
}

// -------------------------------------------------------------------

// RBGV_AuxKey

// optional .lattica_proto.RBGV_Ciphertext base_key = 1;
inline bool RBGV_AuxKey::has_base_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.base_key_ != nullptr);
  return value;
}
inline const ::lattica_proto::RBGV_Ciphertext& RBGV_AuxKey::_internal_base_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lattica_proto::RBGV_Ciphertext* p = _impl_.base_key_;
  return p != nullptr ? *p : reinterpret_cast<const ::lattica_proto::RBGV_Ciphertext&>(::lattica_proto::_RBGV_Ciphertext_default_instance_);
}
inline const ::lattica_proto::RBGV_Ciphertext& RBGV_AuxKey::base_key() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lattica_proto.RBGV_AuxKey.base_key)
  return _internal_base_key();
}
inline void RBGV_AuxKey::unsafe_arena_set_allocated_base_key(::lattica_proto::RBGV_Ciphertext* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_key_);
  }
  _impl_.base_key_ = reinterpret_cast<::lattica_proto::RBGV_Ciphertext*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lattica_proto.RBGV_AuxKey.base_key)
}
inline ::lattica_proto::RBGV_Ciphertext* RBGV_AuxKey::release_base_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lattica_proto::RBGV_Ciphertext* released = _impl_.base_key_;
  _impl_.base_key_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lattica_proto::RBGV_Ciphertext* RBGV_AuxKey::unsafe_arena_release_base_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lattica_proto.RBGV_AuxKey.base_key)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lattica_proto::RBGV_Ciphertext* temp = _impl_.base_key_;
  _impl_.base_key_ = nullptr;
  return temp;
}
inline ::lattica_proto::RBGV_Ciphertext* RBGV_AuxKey::_internal_mutable_base_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_key_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lattica_proto::RBGV_Ciphertext>(GetArena());
    _impl_.base_key_ = reinterpret_cast<::lattica_proto::RBGV_Ciphertext*>(p);
  }
  return _impl_.base_key_;
}
inline ::lattica_proto::RBGV_Ciphertext* RBGV_AuxKey::mutable_base_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lattica_proto::RBGV_Ciphertext* _msg = _internal_mutable_base_key();
  // @@protoc_insertion_point(field_mutable:lattica_proto.RBGV_AuxKey.base_key)
  return _msg;
}
inline void RBGV_AuxKey::set_allocated_base_key(::lattica_proto::RBGV_Ciphertext* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_key_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.base_key_ = reinterpret_cast<::lattica_proto::RBGV_Ciphertext*>(value);
  // @@protoc_insertion_point(field_set_allocated:lattica_proto.RBGV_AuxKey.base_key)
}

// optional .lattica_proto.RBGV_Ciphertext full_key = 2;
inline bool RBGV_AuxKey::has_full_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.full_key_ != nullptr);
  return value;
}
inline const ::lattica_proto::RBGV_Ciphertext& RBGV_AuxKey::_internal_full_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lattica_proto::RBGV_Ciphertext* p = _impl_.full_key_;
  return p != nullptr ? *p : reinterpret_cast<const ::lattica_proto::RBGV_Ciphertext&>(::lattica_proto::_RBGV_Ciphertext_default_instance_);
}
inline const ::lattica_proto::RBGV_Ciphertext& RBGV_AuxKey::full_key() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lattica_proto.RBGV_AuxKey.full_key)
  return _internal_full_key();
}
inline void RBGV_AuxKey::unsafe_arena_set_allocated_full_key(::lattica_proto::RBGV_Ciphertext* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.full_key_);
  }
  _impl_.full_key_ = reinterpret_cast<::lattica_proto::RBGV_Ciphertext*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lattica_proto.RBGV_AuxKey.full_key)
}
inline ::lattica_proto::RBGV_Ciphertext* RBGV_AuxKey::release_full_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::lattica_proto::RBGV_Ciphertext* released = _impl_.full_key_;
  _impl_.full_key_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lattica_proto::RBGV_Ciphertext* RBGV_AuxKey::unsafe_arena_release_full_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lattica_proto.RBGV_AuxKey.full_key)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::lattica_proto::RBGV_Ciphertext* temp = _impl_.full_key_;
  _impl_.full_key_ = nullptr;
  return temp;
}
inline ::lattica_proto::RBGV_Ciphertext* RBGV_AuxKey::_internal_mutable_full_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.full_key_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lattica_proto::RBGV_Ciphertext>(GetArena());
    _impl_.full_key_ = reinterpret_cast<::lattica_proto::RBGV_Ciphertext*>(p);
  }
  return _impl_.full_key_;
}
inline ::lattica_proto::RBGV_Ciphertext* RBGV_AuxKey::mutable_full_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::lattica_proto::RBGV_Ciphertext* _msg = _internal_mutable_full_key();
  // @@protoc_insertion_point(field_mutable:lattica_proto.RBGV_AuxKey.full_key)
  return _msg;
}
inline void RBGV_AuxKey::set_allocated_full_key(::lattica_proto::RBGV_Ciphertext* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.full_key_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.full_key_ = reinterpret_cast<::lattica_proto::RBGV_Ciphertext*>(value);
  // @@protoc_insertion_point(field_set_allocated:lattica_proto.RBGV_AuxKey.full_key)
}

// optional .lattica_proto.RBGV_Ciphertext identity_key = 3;
inline bool RBGV_AuxKey::has_identity_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.identity_key_ != nullptr);
  return value;
}
inline const ::lattica_proto::RBGV_Ciphertext& RBGV_AuxKey::_internal_identity_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lattica_proto::RBGV_Ciphertext* p = _impl_.identity_key_;
  return p != nullptr ? *p : reinterpret_cast<const ::lattica_proto::RBGV_Ciphertext&>(::lattica_proto::_RBGV_Ciphertext_default_instance_);
}
inline const ::lattica_proto::RBGV_Ciphertext& RBGV_AuxKey::identity_key() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lattica_proto.RBGV_AuxKey.identity_key)
  return _internal_identity_key();
}
inline void RBGV_AuxKey::unsafe_arena_set_allocated_identity_key(::lattica_proto::RBGV_Ciphertext* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.identity_key_);
  }
  _impl_.identity_key_ = reinterpret_cast<::lattica_proto::RBGV_Ciphertext*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lattica_proto.RBGV_AuxKey.identity_key)
}
inline ::lattica_proto::RBGV_Ciphertext* RBGV_AuxKey::release_identity_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::lattica_proto::RBGV_Ciphertext* released = _impl_.identity_key_;
  _impl_.identity_key_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lattica_proto::RBGV_Ciphertext* RBGV_AuxKey::unsafe_arena_release_identity_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lattica_proto.RBGV_AuxKey.identity_key)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::lattica_proto::RBGV_Ciphertext* temp = _impl_.identity_key_;
  _impl_.identity_key_ = nullptr;
  return temp;
}
inline ::lattica_proto::RBGV_Ciphertext* RBGV_AuxKey::_internal_mutable_identity_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.identity_key_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lattica_proto::RBGV_Ciphertext>(GetArena());
    _impl_.identity_key_ = reinterpret_cast<::lattica_proto::RBGV_Ciphertext*>(p);
  }
  return _impl_.identity_key_;
}
inline ::lattica_proto::RBGV_Ciphertext* RBGV_AuxKey::mutable_identity_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::lattica_proto::RBGV_Ciphertext* _msg = _internal_mutable_identity_key();
  // @@protoc_insertion_point(field_mutable:lattica_proto.RBGV_AuxKey.identity_key)
  return _msg;
}
inline void RBGV_AuxKey::set_allocated_identity_key(::lattica_proto::RBGV_Ciphertext* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.identity_key_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.identity_key_ = reinterpret_cast<::lattica_proto::RBGV_Ciphertext*>(value);
  // @@protoc_insertion_point(field_set_allocated:lattica_proto.RBGV_AuxKey.identity_key)
}

// optional .lattica_proto.RBGV_Ciphertext square_key = 4;
inline bool RBGV_AuxKey::has_square_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.square_key_ != nullptr);
  return value;
}
inline const ::lattica_proto::RBGV_Ciphertext& RBGV_AuxKey::_internal_square_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lattica_proto::RBGV_Ciphertext* p = _impl_.square_key_;
  return p != nullptr ? *p : reinterpret_cast<const ::lattica_proto::RBGV_Ciphertext&>(::lattica_proto::_RBGV_Ciphertext_default_instance_);
}
inline const ::lattica_proto::RBGV_Ciphertext& RBGV_AuxKey::square_key() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lattica_proto.RBGV_AuxKey.square_key)
  return _internal_square_key();
}
inline void RBGV_AuxKey::unsafe_arena_set_allocated_square_key(::lattica_proto::RBGV_Ciphertext* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.square_key_);
  }
  _impl_.square_key_ = reinterpret_cast<::lattica_proto::RBGV_Ciphertext*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lattica_proto.RBGV_AuxKey.square_key)
}
inline ::lattica_proto::RBGV_Ciphertext* RBGV_AuxKey::release_square_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::lattica_proto::RBGV_Ciphertext* released = _impl_.square_key_;
  _impl_.square_key_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lattica_proto::RBGV_Ciphertext* RBGV_AuxKey::unsafe_arena_release_square_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lattica_proto.RBGV_AuxKey.square_key)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::lattica_proto::RBGV_Ciphertext* temp = _impl_.square_key_;
  _impl_.square_key_ = nullptr;
  return temp;
}
inline ::lattica_proto::RBGV_Ciphertext* RBGV_AuxKey::_internal_mutable_square_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.square_key_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lattica_proto::RBGV_Ciphertext>(GetArena());
    _impl_.square_key_ = reinterpret_cast<::lattica_proto::RBGV_Ciphertext*>(p);
  }
  return _impl_.square_key_;
}
inline ::lattica_proto::RBGV_Ciphertext* RBGV_AuxKey::mutable_square_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::lattica_proto::RBGV_Ciphertext* _msg = _internal_mutable_square_key();
  // @@protoc_insertion_point(field_mutable:lattica_proto.RBGV_AuxKey.square_key)
  return _msg;
}
inline void RBGV_AuxKey::set_allocated_square_key(::lattica_proto::RBGV_Ciphertext* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.square_key_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.square_key_ = reinterpret_cast<::lattica_proto::RBGV_Ciphertext*>(value);
  // @@protoc_insertion_point(field_set_allocated:lattica_proto.RBGV_AuxKey.square_key)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace lattica_proto


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_serialization_2fkey_5faux_2eproto_2epb_2eh
